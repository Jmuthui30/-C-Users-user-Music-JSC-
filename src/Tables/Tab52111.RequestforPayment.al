table 52111 "Request for Payment"
{
    fields
    {
        field(1; "No."; Code[20])
        {
            Editable = false;
        }
        field(2; Date; Date)
        {
            Editable = false;
        }
        field(3; "Created By"; Code[50])
        {
            Editable = false;
        }
        field(4; "Created Date"; Date)
        {
            Editable = false;
        }
        field(5; "Creditor No."; Code[20])
        {
            trigger OnLookup()
            begin
                if "Source Document" = "Source Document"::"Purchase Order" then begin
                    Supplier.Reset;
                    if PAGE.RunModal(PAGE::"Vendor List", Supplier) = ACTION::LookupOK then begin
                        Validate("Creditor No.", Supplier."No.");
                    end;
                end
                else if "Source Document" = "Source Document"::"Travel Order" then begin
                        Staff.Reset;
                        Staff.SetRange("Customer Posting Group", 'TRAVEL');
                        if PAGE.RunModal(PAGE::"Customer List", Staff) = ACTION::LookupOK then begin
                            Validate("Creditor No.", Staff."No.");
                        end;
                    end
                    else if "Source Document" = "Source Document"::"Supplier Invoice" then begin
                            Supplier.Reset;
                            if PAGE.RunModal(PAGE::"Vendor List", Supplier) = ACTION::LookupOK then begin
                                Validate("Creditor No.", Supplier."No.");
                            end;
                        end;
            end;
            trigger OnValidate()
            begin
                if("Source Document" = "Source Document"::"Purchase Order") or ("Source Document" = "Source Document"::"Supplier Invoice")then begin
                    if Supplier.Get("Creditor No.")then "Name of Creditor":=Supplier.Name
                    else
                        Error('The creditor No. %1 does not exist in the Vendors list. Create it.', "Creditor No.");
                end
                else if "Source Document" = "Source Document"::"Travel Order" then begin
                        if Staff.Get("Creditor No.")then "Name of Creditor":=Staff.Name
                        else
                            Error('The Staff No. %1 does not exist in the Staff Customer list. Create it.', "Creditor No.");
                    end;
            end;
        }
        field(6; "Name of Creditor"; Text[50])
        {
            Editable = false;
        }
        field(7; "Source Document"; Option)
        {
            OptionCaption = 'Purchase Order,Travel Order,Supplier Invoice';
            OptionMembers = "Purchase Order", "Travel Order", "Supplier Invoice";
        }
        field(8; Amount; Decimal)
        {
            Editable = false;
            FieldClass = FlowField;
            CalcFormula = sum("Request for Payment Lines".Amount where("No."=field("No.")));
        }
        field(9; Status;Enum "Document Status")
        {
            Editable = false;
        }
        field(10; "No. Series"; Code[10])
        {
            TableRelation = "No. Series";
        }
        field(11; "PV Generated"; Boolean)
        {
        }
        field(12; "PV Generated Date"; DateTime)
        {
        }
        field(13; "PV No."; Code[20])
        {
        }
        field(14; "PV Generated By"; Code[50])
        {
        }
        field(15; "SharePoint Link"; Text[250])
        {
        }
        field(16; "Incoming Document Entry No."; Integer)
        {
            Caption = 'Incoming Document Entry No.';
            TableRelation = "Incoming Document";

            trigger OnValidate()
            var
                IncomingDocument: Record "Incoming Document";
            begin
                if "Incoming Document Entry No." = xRec."Incoming Document Entry No." then exit;
                if "Incoming Document Entry No." = 0 then IncomingDocument.RemoveReferenceToWorkingDocument(xRec."Incoming Document Entry No.");
            // else
            // IncomingDocument.SetPaymentRequestDoc(Rec);
            end;
        }
        field(17; Approvers; Integer)
        {
            CalcFormula = Count("Approval Entry" WHERE("Table ID"=CONST(52111), "Document No."=FIELD("No."), Status=FILTER(Approved)));
            FieldClass = FlowField;
            Caption = 'Approvers';
            Editable = false;
        }
        field(18; "Pending Approvals Ext"; Integer)
        {
            CalcFormula = Count("Approval Entry" WHERE("Table ID"=CONST(52111), "Document No."=FIELD("No."), Status=FILTER(Open|Created)));
            Caption = 'Pending Approvals';
            FieldClass = FlowField;
            Editable = false;
        }
    }
    keys
    {
        key(Key1; "No.")
        {
        }
    }
    fieldgroups
    {
        fieldgroup(DropDown; "No.", "Creditor No.", "Name of Creditor", Amount)
        {
        }
        fieldgroup(Brick; "No.", "Creditor No.", "Name of Creditor", Amount)
        {
        }
    }
    trigger OnDelete()
    begin
        TestField(Status, Status::Open);
    end;
    trigger OnInsert()
    begin
        if "No." = '' then begin
            AdvancedFinanceSetup.Get;
            AdvancedFinanceSetup.TestField("Request for Payment Nos.");
            NoSeriesMgt.InitSeries(AdvancedFinanceSetup."Request for Payment Nos.", xRec."No. Series", 0D, "No.", "No. Series");
        end;
        Date:=Today;
        Status:=Status::Open;
        "Created Date":=Today;
        "Created By":=UserId;
    end;
    var AdvancedFinanceSetup: Record "Advanced Finance Setup";
    NoSeriesMgt: Codeunit NoSeriesManagement;
    Supplier: Record Vendor;
    LPO: Record "Purchase Header";
    ITO: Record "Imprest Header";
    Staff: Record Customer;
    Invoice: Record "Purch. Inv. Header";
}
